# !!! Configuration non à jour sur le GitHub !!!

# Configuration qui reprend tous les fichiers de configuration (www.conf, b2b.conf, intranet.conf)

# WWW
server {
	# Cette ligne de commande dit au serveur NGINX d'écouter sur le port 80
	listen 80;
	
	# Nom du serveur NGINX
	server_name www.l1-2.ephec-ti.be;
	
	# Cette ligne de code spécifie la racine du document. Elle pointe vers la racine du document du site correspondant (www)
	root /usr/share/nginx/www;
	index index.html;
	
	# La directive 'error_page' est utilisée lorsqu'une erreur 404 se produit (lorsqu'un fichier demandé n'est pas trouvé).
	# La page personnalisée correspondant aux erreurs se trouveront dans un fichier error.html
	error_page 404 /error.html;
	
	# Définir le chemin vers cette page web error.html
	location = /error.html {
		root /usr/share/nginx/html;
	}

	location / {
		# La ligne de commande ci-dessous permet de redirigé la requête vers un 404 en cas de non-existance
		# Autre explication : (First attempt to serve request as file ($uri), then directory ($uri/), then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
}

# B2B
server {
	# Cette ligne de commande dit au serveur NGINX d'écouter sur le port 80
	listen 80;
	
	# Nom du serveur NGINX
	server_name  b2b.l1-2.ephec-ti.be;
	
	# Cette ligne de code spécifie la racine du document. Elle pointe vers la racine du document du site correspondant (b2b)
	root /usr/share/nginx/b2b;
	index index.php;

	# La directive 'error_page' est utilisée lorsqu'une erreur 404 se produit (lorsqu'un fichier demandé n'est pas trouvé).
	# La page personnalisée correspondant aux erreurs se trouveront dans un fichier error.html
	error_page 404 /error.html;
	
	# Définir le chemin vers cette page web error.html
	location = /error.html {
		root /usr/share/nginx/html;
	}
	
	# Source : https://grafikart.fr/tutoriels/nginx-php-fpm-522
	# Nginx n'est pas capable de comprendre le PHP et dès que vous appellez un fichier php il vous lance un téléchargement.
	# Il faut donc lui expliquer comment traiter les fichiers PHP.
	# Lorsqu'une personne essaiera de charger un fichier php, nginx utilisera 'fastcgi' pour communiquer avec le process PHP et obtenir un retour.
	
	location ~ \.php$ {
		try_files $uri =404;
		root           /var/www/html;
		fastcgi_pass   172.17.0.2:9000;
		fastcgi_index  index.php;
		fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
		include        fastcgi_params;
	}

}

# INTRANET
server {
	# Cette ligne de commande dit au serveur NGINX d'écouter sur le port 80
	listen 80;
	
	# Cette ligne de code spécifie la racine du document. Elle pointe vers la racine du document du site correspondant (intranet)
	root /usr/share/nginx/html/intranet;
	index index.html index.htm;
	
	# Nom du serveur NGINX
	server_name intranet.l1-2.ephec-ti.be;

	location / {
		# Cette commande (allow) permet d'autoriser uniquement l'accès à internet pour la machine d'un employé
		allow 54.37.65.60;
		
		# Pour interdire tout accès à toutes les autres adresses IP des machines qui ne sont pas autorisées à le faire
		deny all;
		try_files $uri $uri/ =404;
	}
}

