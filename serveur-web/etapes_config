
# docker build -t nginx .
# docker run --name nginx -p 80:80 -p 443:443 -d mathisdory/projet-admin-2:nginx (vps)
# docker run --name nginx -p 80:80 -p 443:443 -d nginx (local)
# docker tag nginx mathisdory/projet-admin-2:nginx

sudo docker exec -ti nginx bash

sudo docker inspect mysqlb2b | grep IPAddress
sudo docker inspect nginx | grep IPAddress

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
# Création de la base de données MySQL
docker pull mysql:latest

sudo docker run --name mysqlb2b -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:latest
sudo docker exec -ti mysqlb2b bash
mysql -u root -p;

ALTER USER 'root'@'localhost' IDENTIFIED BY 'mysqlb2b';
CREATE DATABASE b2b CHARACTER SET 'utf8';

CREATE USER 'admin'@'172.17.0.2' IDENTIFIED BY '123';
GRANT ALL PRIVILEGES ON b2b.*  TO 'directeur'@'172.17.0.2';
FLUSH PRIVILEGES;

CREATE USER 'directeur'@'172.17.0.2' IDENTIFIED BY '123';
GRANT SELECT, UPDATE, INSERT, DELETE, CREATE ON b2b.*  TO 'directeur'@'172.17.0.2';
FLUSH PRIVILEGES;

CREATE USER 'employe'@'172.17.0.2' IDENTIFIED BY '123';
GRANT SELECT ON b2b.*  TO 'employe'@'172.17.0.2';
FLUSH PRIVILEGES;

20. SHOW DATABASES;
21. USE b2b;
22. CREATE TABLE b2bboutique (ID int not null auto_increment, ARTICLE varchar(30) not null, DESCRIPTION varchar(100) not null, PRIX float(6,2) not null, primary key(ID));
23. INSERT INTO b2bboutique (ARTICLE, DESCRIPTION, PRIX) values ("La guerre des clans", "Retour a l'etat sauvage", 12.99);
24. INSERT INTO b2bboutique (ARTICLE, DESCRIPTION, PRIX) values ("Jouet de guerre en bois", "Elaborez un champ de guerre avec ces magnifiques petits soldats en bois", 45.99);
25. INSERT INTO b2bboutique (ARTICLE, DESCRIPTION, PRIX) values ("Schtroumpf", "Peluche rouge et blanche representant le chef de la tribu des schtroumpf", 10.99);
26. mysql -u [nom de l'utilisateur] -p; -> connexion avec utilisateur souhaité
27. SHOW TABLES; -> pour voir toutes les tables
28. DESCRIBE b2bboutique;
29. SELECT * from b2bboutique;

31. mysqldump -u root -p b2b -P 3306 > b2b_save.sql

# service nginx reload
# nmap -p 3306 172.17.0.3
# ip ad
Le compte directeur ne peut se connecter seulement depuis 172.17.0.2 donc depuis le container nginx
# mysql -h 172.17.0.3 -u root -p;
# select user, host from mysql.user;
# delete from mysql.user where user='directeur';

